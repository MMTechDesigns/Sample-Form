package com.mmtech.mysample;

import java.util.ArrayList;
import javax.swing.DefaultListModel;

public class SampleFrame extends javax.swing.JFrame {

    private Employee selected_employee;
    private ArrayList<Employee> allEmployees;
    private boolean in_edit_mode;
    final private DefaultListModel list_model;
    final MyEntityManager entityManager;
    
    public SampleFrame() {
        initComponents();
        
        in_edit_mode = false;
        allEmployees = new ArrayList<>();
        list_model = new DefaultListModel();
        
        entityManager = new MyEntityManager();
        refreshListFromDB();
    }

    private void refreshListFromDB(){
        entityManager.openManager();
        allEmployees = entityManager.fetchEmployeesToStringList();
        entityManager.closeManager();
        list_model.removeAllElements();
        for (Employee emp : allEmployees) {
            list_model.addElement(emp.toString());
        }
        mylist.setModel(list_model);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        firstname = new javax.swing.JTextField();
        lastname = new javax.swing.JTextField();
        age = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        mylist = new javax.swing.JList();
        update = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        validationMsgLabel = new javax.swing.JLabel();
        deletebutton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        firstname.setName("firstname"); // NOI18N
        getContentPane().add(firstname);
        firstname.setBounds(360, 140, 520, 27);

        lastname.setName("lastname"); // NOI18N
        getContentPane().add(lastname);
        lastname.setBounds(360, 190, 520, 27);

        age.setName("age"); // NOI18N
        getContentPane().add(age);
        age.setBounds(360, 240, 520, 27);

        mylist.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        mylist.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                mylistValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(mylist);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(230, 360, 680, 150);

        update.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        update.setText("Save");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        getContentPane().add(update);
        update.setBounds(330, 300, 170, 30);

        jLabel1.setText("Age");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(230, 240, 100, 30);

        jLabel2.setText("First Name");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(230, 140, 100, 30);

        jLabel3.setText("Last Name");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(230, 190, 100, 30);

        add.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        add.setText("Add New Employee");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        getContentPane().add(add);
        add.setBounds(410, 30, 320, 30);

        validationMsgLabel.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        validationMsgLabel.setForeground(java.awt.Color.red);
        validationMsgLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(validationMsgLabel);
        validationMsgLabel.setBounds(220, 80, 690, 40);

        deletebutton.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        deletebutton.setText("Delete");
        deletebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebuttonActionPerformed(evt);
            }
        });
        getContentPane().add(deletebutton);
        deletebutton.setBounds(610, 300, 170, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void mylistValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_mylistValueChanged
        if (mylist.getSelectedIndex() > -1) { //user made a selection
            selected_employee = allEmployees.get(mylist.getSelectedIndex());
        
            firstname.setText(selected_employee.firstname);
            lastname.setText(selected_employee.lastname);
            age.setText(String.valueOf(selected_employee.age));
            in_edit_mode = true;
            validationMsgLabel.setText("");
        }
    }//GEN-LAST:event_mylistValueChanged

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
       in_edit_mode = false;
       selected_employee = new Employee();
       firstname.setText("");
       lastname.setText("");
       age.setText(String.valueOf(""));
       validationMsgLabel.setText("");
    }//GEN-LAST:event_addActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed

        if (in_edit_mode){ // edit existing
                String updateStr = "set ";
                if (!selected_employee.getFirstname().contentEquals(firstname.getText())) { 
                    String addit = String.format("firstname='%s',",firstname.getText());
                    updateStr = updateStr.concat(addit); 
                }
                if (!selected_employee.getLastname().contentEquals(lastname.getText())) { 
                    String addit = String.format("lastname='%s',",lastname.getText());
                    updateStr = updateStr.concat(addit); 
                }
                if (selected_employee.getAge() > Integer.valueOf(age.getText()) || selected_employee.getAge() < Integer.valueOf(age.getText())) { 
                    updateStr = updateStr.concat("age="+Integer.valueOf(age.getText())); 
                }
                String finalUpdate = "";
                if (updateStr.substring(updateStr.length()-1).contentEquals(",")) { //if last char is a comma, save str begin to one less length
                    finalUpdate = updateStr.substring(0, updateStr.length()-1);
                }else{
                    finalUpdate = updateStr;
                }

                entityManager.openManager();
                String updateResponse = entityManager.updateTableWithInfo("employee", finalUpdate, selected_employee.getId());
                validationMsgLabel.setText(updateResponse);
                entityManager.closeManager();
                if (updateResponse.contains("Updated")) {
                    refreshListFromDB();
                }
        }else{
            //if adding new employee (normally user text should be screened further, avoid numbers in text, etc.)
            if (!firstname.getText().isEmpty() && !lastname.getText().isEmpty()) {
                Employee newadd = new Employee();
                newadd.setFirstname(firstname.getText());
                newadd.setLastname(lastname.getText());
                newadd.setAge(Integer.valueOf(age.getText()));
                // uses entity manager to add this employee to db
                entityManager.openManager();
                int newid = entityManager.getNextClassIdforTable("employee");
                newadd.setId(newid);
                entityManager.addNewEmployee(newadd);
                entityManager.closeManager();
                
                refreshListFromDB(); // to get a fresh look at everything in db
                firstname.setText("");
                lastname.setText("");
                age.setText(String.valueOf(""));
                in_edit_mode = true;
            }
        }
    }//GEN-LAST:event_updateActionPerformed

    private void deletebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebuttonActionPerformed
        if (selected_employee.getId() != null) {
            String current_name = String.format("%s %s",selected_employee.getFirstname(),selected_employee.getLastname());
            entityManager.openManager();
            String deleteResponse = entityManager.deleteItemInTableWithId("employee", selected_employee.getId(), current_name);
            validationMsgLabel.setText(deleteResponse);
            entityManager.closeManager();
            if (deleteResponse.contains("deleted")) {
                   refreshListFromDB();
            }
            firstname.setText("");
            lastname.setText("");
            age.setText(String.valueOf(""));
        }
    }//GEN-LAST:event_deletebuttonActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SampleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SampleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SampleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SampleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SampleFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTextField age;
    private javax.swing.JButton deletebutton;
    private javax.swing.JTextField firstname;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastname;
    private javax.swing.JList mylist;
    private javax.swing.JButton update;
    private javax.swing.JLabel validationMsgLabel;
    // End of variables declaration//GEN-END:variables
}
